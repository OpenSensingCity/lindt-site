# Copyright 2016 ITEA 12004 SEAS Project.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix max: <http://www.maxime-lefrancois.info/me#> .
@prefix vann: <http://purl.org/vocab/vann/> .
@prefix voaf: <http://purl.org/vocommons/voaf#> .
@prefix vs: <http://www.w3.org/2003/06/sw-vocab-status/ns#> .
@prefix lindt: <https://w3id.org/lindt/voc#> .
@prefix dc: <http://purl.org/dc/terms/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/>.

<https://w3id.org/lindt/voc#> a owl:Ontology, voaf:Vocabulary;
  dc:title "The Lindt Vocabulary "@en ;
  dc:description "The Lindt (Linked Datatypes) vocabulary that enables to describe custom datatypes, this vocabulary may be used by RDF processors and SPARQL engines to recognize custom datatypes on the fly."@en ;
  dc:issued "2016-04-22"^^xsd:date ;
  dc:modified "2016-04-22"^^xsd:date ;
  dc:creator max: ;
  vann:preferredNamespacePrefix "lindt" ;
  vann:preferredNamespaceUri <https://w3id.org/lindt/voc#> ;
  rdfs:seeAlso <https://w3id.org/lindt/spec.html> ;
  owl:versionInfo "v1.0" .  

<https://w3id.org/lindt/voc.ttl>  a  foaf:Document;
    dc:creator  max:;
    dc:modified  "2016-04-22T10:42:42+02:00"^^xsd:dateTimeStamp .

lindt:Datatype a owl:Class ;
  rdfs:subClassOf [ owl:onProperty lindt:implements ; owl:hasValue lindt:getIri ] ;
  rdfs:subClassOf [ owl:onProperty lindt:implements ; owl:hasValue lindt:getRecognisedDatatypes ] ;
  rdfs:subClassOf [ owl:onProperty lindt:implements ; owl:hasValue lindt:importLiteral ] ;
  rdfs:subClassOf [ owl:onProperty lindt:implements ; owl:hasValue lindt:exportLiteral ] ;
  rdfs:subClassOf [ owl:onProperty lindt:implements ; owl:hasValue lindt:getNormalForm ] ;
  rdfs:subClassOf [ owl:onProperty lindt:implements ; owl:hasValue lindt:isWellFormed ] ;
  rdfs:subClassOf [ owl:onProperty lindt:implements ; owl:hasValue lindt:recognisesDatatype ] ;
  rdfs:subClassOf [ owl:onProperty lindt:implements ; owl:hasValue lindt:isEqual ] ;
  rdfs:subClassOf [ owl:onProperty lindt:implements ; owl:hasValue lindt:isEqual ] ;
  rdfs:label "Datatype"@en ;
  rdfs:comment """The class of Linked Datatypes, that RDF processors and SPARQL engines should be able to recognize on the fly."""@en ;
  vs:term_status "testing" ;
  rdfs:seeAlso <https://w3id.org/lindt/spec.html> ;
  rdfs:isDefinedBy <https://w3id.org/lindt/voc#> .

lindt:base a owl:ObjectProperty ;
   rdfs:label "base"@en ;
   rdfs:comment """Links a datatype to one of its base datatype: 
(1) the lexical space of the subject datatype includes the lexical space of the object datatype; 
(2) the lexical-to-value mapping of the subject extends the lexical-to-value mapping of the object; (3) the ordering of lexical forms for the subject datatype extends the ordering of lexical forms of the object."""@en ;
  rdfs:domain lindt:Datatype ;
  rdfs:range lindt:Datatype ;
  vs:term_status "testing" ;
  rdfs:seeAlso <https://w3id.org/lindt/spec.html> ;
  rdfs:isDefinedBy <https://w3id.org/lindt/voc#> .   


lindt:implements a owl:Property ;
  rdfs:subClassOf lindt:Datatype ;
  rdfs:label "implements"@en ;
  rdfs:comment """Links a datatype to the name of a function that the Javascript object representing this datatype should implement."""@en ;
  rdfs:domain lindt:Datatype ;
  rdfs:range lindt:Function ;
  vs:term_status "testing" ;
  rdfs:seeAlso <https://w3id.org/lindt/spec.html> ;
  rdfs:isDefinedBy <https://w3id.org/lindt/voc#> .   

lindt:Function a owl:Class ;
  rdfs:label "Function"@en ;
  rdfs:comment """The class of functions that Javascript object representing Lindt datatype implement."""@en ;
  vs:term_status "testing" ;
  rdfs:seeAlso <https://w3id.org/lindt/spec.html> ;
  rdfs:isDefinedBy <https://w3id.org/lindt/voc#> .   

lindt:compare a lindt:Function ;
  rdfs:label "compare"@en ;
  rdfs:comment """A function that enables to programmatically compare and order literals."""@en ;
  vs:term_status "testing" ;
  rdfs:seeAlso <https://w3id.org/lindt/spec.html> ;
  rdfs:isDefinedBy <https://w3id.org/lindt/voc#> .   

lindt:exportLiteral a lindt:Function ;
  rdfs:label "exportLiteral"@en ;
  rdfs:comment """A function that enables to programmatically export a literal to a literal with another datatype, but with the same value."""@en ;
  vs:term_status "testing" ;
  rdfs:seeAlso <https://w3id.org/lindt/spec.html> ;
  rdfs:isDefinedBy <https://w3id.org/lindt/voc#> .   

lindt:getIri a lindt:Function ;
  rdfs:label "getIri"@en ;
  rdfs:comment """A function to programmatically retrieve the IRI of the datatype."""@en ;
  vs:term_status "testing" ;
  rdfs:seeAlso <https://w3id.org/lindt/spec.html> ;
  rdfs:isDefinedBy <https://w3id.org/lindt/voc#> .   

lindt:getNormalForm a lindt:Function ;
  rdfs:label "getNormalForm"@en ;
  rdfs:comment """A function to programmatically get a normal form for a lexical form - normal with respect to this datatype."""@en ;
  vs:term_status "testing" ;
  rdfs:seeAlso <https://w3id.org/lindt/spec.html> ;
  rdfs:isDefinedBy <https://w3id.org/lindt/voc#> .   

lindt:getRecognisedDatatypes a lindt:Function ;
  rdfs:label "getRecognisedDatatypes"@en ;
  rdfs:comment """A function to programmatically get a the list of datatypes to and from which literals can be exported and imported."""@en ;
  vs:term_status "testing" ;
  rdfs:seeAlso <https://w3id.org/lindt/spec.html> ;
  rdfs:isDefinedBy <https://w3id.org/lindt/voc#> .   

lindt:importLiteral a lindt:Function ;
  rdfs:label "importLiteral"@en ;
  rdfs:comment """A function to programmatically import a literal from another datatype to this datatype."""@en ;
  vs:term_status "testing" ;
  rdfs:seeAlso <https://w3id.org/lindt/spec.html> ;
  rdfs:isDefinedBy <https://w3id.org/lindt/voc#> .   

lindt:exportLiteral a lindt:Function ;
  rdfs:label "exportLiteral"@en ;
  rdfs:comment """A function to programmatically export a literal from this datatype to another datatype."""@en ;
  vs:term_status "testing" ;
  rdfs:seeAlso <https://w3id.org/lindt/spec.html> ;
  rdfs:isDefinedBy <https://w3id.org/lindt/voc#> .   

lindt:isEqual a lindt:Function ;
  rdfs:label "isEqual"@en ;
  rdfs:comment """A function to programmatically check whether two literals have equal values."""@en ;
  vs:term_status "testing" ;
  rdfs:seeAlso <https://w3id.org/lindt/spec.html> ;
  rdfs:isDefinedBy <https://w3id.org/lindt/voc#> .   

lindt:isWellFormed a lindt:Function ;
  rdfs:label "isWellFormed"@en ;
  rdfs:comment """A function to programmatically check if lexical form is valid for this datatype."""@en ;
  vs:term_status "testing" ;
  rdfs:seeAlso <https://w3id.org/lindt/spec.html> ;
  rdfs:isDefinedBy <https://w3id.org/lindt/voc#> .   

lindt:recognisesDatatype a lindt:Function ;
  rdfs:label "recognisesDatatype"@en ;
  rdfs:comment """A function to programmatically check if a datatype recognizes another."""@en ;
  vs:term_status "testing" ;
  rdfs:seeAlso <https://w3id.org/lindt/spec.html> ;
  rdfs:isDefinedBy <https://w3id.org/lindt/voc#> .   

lindt:add a lindt:Function ;
  rdfs:label "add"@en ;
  rdfs:comment """A function to programmatically add two literals."""@en ;
  vs:term_status "testing" ;
  rdfs:seeAlso <https://w3id.org/lindt/spec.html> ;
  rdfs:isDefinedBy <https://w3id.org/lindt/voc#> .   

lindt:substract a lindt:Function ;
  rdfs:label "substract"@en ;
  rdfs:comment """A function to programmatically substract two literals."""@en ;
  vs:term_status "testing" ;
  rdfs:seeAlso <https://w3id.org/lindt/spec.html> ;
  rdfs:isDefinedBy <https://w3id.org/lindt/voc#> .   

lindt:additiveIdentity a lindt:Function ;
  rdfs:label "additiveIdentity"@en ;
  rdfs:comment """A function to programmatically get the neutral literal for function lindt:add."""@en ;
  vs:term_status "testing" ;
  rdfs:seeAlso <https://w3id.org/lindt/spec.html> ;
  rdfs:isDefinedBy <https://w3id.org/lindt/voc#> .   

lindt:multiply a lindt:Function ;
  rdfs:label "multiply"@en ;
  rdfs:comment """A function to programmatically multiply two literals."""@en ;
  vs:term_status "testing" ;
  rdfs:seeAlso <https://w3id.org/lindt/spec.html> ;
  rdfs:isDefinedBy <https://w3id.org/lindt/voc#> .   

lindt:divide a lindt:Function ;
  rdfs:label "divide"@en ;
  rdfs:comment """A function to programmatically divide two literals."""@en ;
  vs:term_status "testing" ;
  rdfs:seeAlso <https://w3id.org/lindt/spec.html> ;
  rdfs:isDefinedBy <https://w3id.org/lindt/voc#> .   

lindt:multiplicativeIdentity a lindt:Function ;
  rdfs:label "multiplicativeIdentity"@en ;
  rdfs:comment """A function to programmatically get the neutral literal for function lindt:multiply."""@en ;
  vs:term_status "testing" ;
  rdfs:seeAlso <https://w3id.org/lindt/spec.html> ;
  rdfs:isDefinedBy <https://w3id.org/lindt/voc#> .   


lindt:TotallyOrdered a owl:Class ;
  rdfs:subClassOf lindt:Datatype ;
  rdfs:subClassOf [ owl:onProperty lindt:implements ; owl:hasValue lindt:compare ] ;
  rdfs:subClassOf [ owl:onProperty lindt:implements ; owl:hasValue lindt:substract ] ;
  rdfs:subClassOf [ owl:onProperty lindt:implements ; owl:hasValue lindt:additiveIdentity ] ;
  rdfs:label "TotallyOrdered"@en ;
  rdfs:comment """The class of datatypes that are totally ordered. The Javascript object representing this datatype should implement function compare(lexicalForm1:string, lexicalForm2:string):string, to compare two literals with this datatype."""@en ;
  vs:term_status "testing" ;
  rdfs:isDefinedBy <https://w3id.org/lindt/voc#> .   

lindt:Group a owl:Class ;
  rdfs:subClassOf lindt:Datatype ;
  rdfs:subClassOf [ owl:onProperty lindt:implements ; owl:hasValue lindt:add ] ;
  rdfs:subClassOf [ owl:onProperty lindt:implements ; owl:hasValue lindt:substract ] ;
  rdfs:subClassOf [ owl:onProperty lindt:implements ; owl:hasValue lindt:additiveIdentity ] ;
  rdfs:label "Group"@en ;
  rdfs:comment """The class of datatypes that are algebraic groups. The Javascript object representing this datatype should implement functions add(lexicalForm1:string, lexicalForm2:string):string and substract(lexicalForm1:string, lexicalForm2:string):string to add and substract two literals with this datatype. It should also implement function additiveIdentity():string to retrieve the additive identity element."""@en ;
  vs:term_status "testing" ;
  rdfs:isDefinedBy <https://w3id.org/lindt/voc#> .   

lindt:Ring a owl:Class ;
  rdfs:subClassOf lindt:Datatype ;
  rdfs:subClassOf [ owl:onProperty lindt:implements ; owl:hasValue lindt:multiply ] ;
  rdfs:subClassOf [ owl:onProperty lindt:implements ; owl:hasValue lindt:divide ] ;
  rdfs:subClassOf [ owl:onProperty lindt:implements ; owl:hasValue lindt:multiplicativeIdentity ] ;
  rdfs:label "Ring"@en ;
  rdfs:comment """The class of datatypes that are algebraic rings, which are also algebraic groups. The Javascript object representing this datatype should implement functions add, substract, and additiveIdentity as specified by class lindt:Group. Furthermore, it should also implement functions multiply(lexicalForm1:string, lexicalForm2:string):string and divide(lexicalForm1:string, lexicalForm2:string):string to multiply and divide two literals with this datatype. It should also implement function multiplicativeIdentity():string to retrieve the multiplicative identity element."""@en ;
  vs:term_status "testing" ;
  rdfs:isDefinedBy <https://w3id.org/lindt/voc#> .   
